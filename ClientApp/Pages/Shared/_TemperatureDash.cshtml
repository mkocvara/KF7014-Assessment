@using ClientApp.Data;
@using ClientApp.Data.Repositories;
@inject IReadOnlyRepository<TemperatureMeasurement> TemperatureRepository
@model int // id of newest measurement with severe risk (0 if none)
@{
    IEnumerable<TemperatureMeasurement> latestTemperatures = await TemperatureRepository.GetLatestInEveryLocation();

    TemperatureMeasurement? SevereMeasurement = null;
    if (Model > 0)
    {
        SevereMeasurement = latestTemperatures.FirstOrDefault(m => m.Id == Model);
    }
}

@if (latestTemperatures.Any())
{
    if (SevereMeasurement is not null)
    {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Severe Weather Alert!</h4>
            <p>Severe temperature has been detected in <b>@SevereMeasurement.Location.</b></p>
        </div>
    }

    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th>Sensor ID</th>
                <th>Sensor Description</th>
                <th>Latest Temperature</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var temperature in latestTemperatures)
            {
                <tr class="@(temperature.Temperature < -5 ? "text-danger fw-bold" : "") @(temperature.Temperature > 32 ? "text-danger fw-bold" : "")">
                    <td>@temperature.SensorID</td>
                    <td>@temperature.Location</td>
                    <td>@temperature.Temperature</td>
                    <td>@temperature.DateTime</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p><i>No measurements found.</i></p>
}